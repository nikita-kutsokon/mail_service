generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Contact {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  firstName String
  lastName  String

  age              Int
  city             String
  email            String @unique
  gender           String
  country          String
  timezone         String
  occupation       String
  sourceOfReferral String
  eduQuestDecision String

  birthDate                DateTime @db.Date
  eduQuestSelectedDateTime DateTime @db.Date

  sentMail       SentMail[]
  scheduledMails ScheduledMail[]

  listIds String[]      @db.ObjectId
  lists   ContactList[] @relation(fields: [listIds], references: [id])
}

model ContactList {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  listName String

  contactIds String[]  @db.ObjectId
  contacts   Contact[] @relation(fields: [contactIds], references: [id])
}

model ScheduledMail {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  contactId String  @db.ObjectId
  contact   Contact @relation(fields: [contactId], references: [id])

  templateId String       @db.ObjectId
  template   MailTemplate @relation(fields: [templateId], references: [id])

  timeZone      String
  scheduledDate DateTime @db.Date

  senderProfileId String        @db.ObjectId
  senderProfile   SenderProfile @relation(fields: [senderProfileId], references: [id])
}

model SentMail {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  contactId String  @db.ObjectId
  contact   Contact @relation(fields: [contactId], references: [id])

  templateId String       @db.ObjectId
  template   MailTemplate @relation(fields: [templateId], references: [id])

  timeZone      String
  scheduledDate DateTime @db.Date

  senderProfileId String        @db.ObjectId
  senderProfile   SenderProfile @relation(fields: [senderProfileId], references: [id])

  emailStatus EmailStatus @default(PENDING)
}

model MailTemplate {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  link String

  sentMails      SentMail[]
  scheduledMails ScheduledMail[]
}

model SenderProfile {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  email String @unique

  scheduledMails ScheduledMail[]
  sentMails      SentMail[]
}

model ContactDataPlacehodelr {
  id               String @id @default(auto()) @map("_id") @db.ObjectId
  contactFieldName String
  placeholderTag   String
}

enum EmailStatus {
  PENDING
  OPENED
}
